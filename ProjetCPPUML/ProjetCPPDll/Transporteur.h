//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma once
#define WANTDLLEXP
#ifdef WANTDLLEXP		//exportation dll
#define DLL  __declspec( dllexport )
#define EXTERNC extern "C"
#else
#define DLL		//standard
#define EXTERNC
#endif

#include "Vaisseau.h"
#include "Artefact.h"
#include "Joueur.h"
#include<vector>

namespace Model
{
	class DLL Transporteur : public Vaisseau
	{

	private :
		Artefact* artefact;
		
	public :
		Transporteur() : Vaisseau() {
			artefact = 0;
		}

		Transporteur(Joueur proprio, std::vector<int> coord) : Vaisseau(proprio, 2, coord) {
			artefact = 0;
		}

		~Transporteur() {
			if(artefact)
				delete artefact;
		}

		virtual void recupererArtefact() {
			int x = this->coordonnees[0];
			int y = this->coordonnees[1];


		}
		virtual void deposerArtefact() {
		
		}

	}; 

	/*EXTERNC DLL Transporteur*  TRANSPORTEUR_New() { return new Transporteur(); }
	EXTERNC DLL void TRANSPORTEUR_Delete(Transporteur* obj) { delete obj; }*/
	EXTERNC DLL void TRANSPORTEUR_recupererArtefact(Transporteur* t) { t->recupererArtefact(); }
	EXTERNC DLL void TRANSPORTEUR_deposerArtefact(Transporteur* t) { t->deposerArtefact(); }
} 

