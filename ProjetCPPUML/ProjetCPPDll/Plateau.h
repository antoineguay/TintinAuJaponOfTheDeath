//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma once
#define WANTDLLEXP
#ifdef WANTDLLEXP		//exportation dll
#define DLL  __declspec( dllexport )
#define EXTERNC extern "C"
#else
#define DLL		//standard
#define EXTERNC
#endif

#include "Case.h"
#include<vector>

namespace Model
{
	class DLL Plateau
	{
		private :

			std::vector<std::vector<Case> > grille;

		public :
			Plateau() {}
			~Plateau() {}
			virtual Model::Case* getCase(int x, int y) { return new CaseArtefact(); }
			virtual void setCase(Model::Case c, int x, int y) {}
			virtual bool activerCases(int x, int y, int nombreLanceDes) { return true; }

	}; 

	EXTERNC DLL Plateau*  PLATEAU_New() { return new Plateau(); }
	EXTERNC DLL void PLATEAU_Delete(Plateau* obj) { delete obj; }
	EXTERNC DLL Case* PLATEAU_getCase(Plateau* p, int x, int y) { return p->getCase(x, y); } 
	EXTERNC DLL void PLATEAU_setCase(Plateau* p, Case c, int x, int y) { p->setCase(c, x, y); }
	EXTERNC DLL bool PLATEAU_activerCases(Plateau* p, int x, int y, int nombreLanceDes)  { return p->activerCases(x, y, nombreLanceDes) ;}
} 

